syntax = "proto3";

package benchmark.grpc;

service ServiceExample {
    // Flat type
    rpc addEmployee (AddEmployeeRequest) returns (AddEmployeeResponse) {}
    rpc getEmployee (GetEmployeeRequest) returns (Employee) {}

    // Nested type
    rpc addSweets (AddSweetsRequest) returns (AddSweetsResponse) {}
    rpc getAllSweets (Empty) returns (Sweets) {}

    // Blocking
    rpc blocking (GetEmployeeRequest) returns (Employee) {}
}

message Employee {
    string first_name = 1;
    string last_name = 2;
    int32 age = 3;
    float height = 4;
    bool flag = 5;
}

message AddEmployeeRequest {
    Employee employee = 1;
}

message AddEmployeeResponse {
    int32 employee_id = 1;
}

message GetEmployeeRequest {
    int32 employee_id = 1;
}

message Batter {
    string id = 1;
    string type = 2;
}

message Topping {
    string id = 1;
    string type = 2;
}

message Sweet {
    string id = 1;
    string type = 2;
    string name = 3;
    double ppu = 4;
    repeated Batter batters = 5;
    repeated Topping topping = 6;
}

message Sweets {
    repeated Sweet sweets = 1;
}

message AddSweetsRequest {
    repeated Sweet sweets = 1;
}

message AddSweetsResponse {
    int32 status = 1;
}
message Empty {
}
